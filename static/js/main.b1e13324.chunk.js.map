{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","map","getUser","usersFromServer","find","App","useState","setTodos","todoTitle","setTodoTitle","setUserId","hasTitleError","setTitleError","hasUserIdError","setUserError","useEffect","preparedTodos","todosFromServer","action","method","onSubmit","event","preventDefault","newTodoTitle","newUserId","newTodo","Math","max","trim","currentTodos","addTodo","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1e13324.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <>\n    {user && (\n      <>\n        <p>\n          {'Name: '}\n          {user.name}\n        </p>\n        <span>{'Email: '}</span>\n        <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n          {user.email}\n        </a>\n      </>\n    )}\n  </>\n);\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={classNames(\n      'TodoInfo',\n      { 'TodoInfo--completed': todo.completed },\n    )}\n  >\n    <div className=\"TodoInfo__task\">TO DO TASK</div>\n\n    {todo.user && (\n      <UserInfo user={todo.user} />\n    )}\n    <p className=\"TodoInfo__title\">\n      {`Task: ${todo.title}`}\n\n    </p>\n    <p>\n      {`Status: ${todo.completed ? 'Done' : 'In progress'}`}\n    </p>\n\n  </article>\n);\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import './App.scss';\n\nimport { useEffect, useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const [hasTitleError, setTitleError] = useState(false);\n  const [hasUserIdError, setUserError] = useState(false);\n\n  useEffect(() => {\n    const preparedTodos: Todo[] = todosFromServer.map(todo => ({\n      ...todo,\n      user: getUser(todo.userId),\n    }));\n\n    setTodos(preparedTodos);\n  }, []);\n\n  function addTodo(newTodoTitle: string, newUserId: number): void {\n    const maxId = Math.max(...todos.map(todo => todo.id));\n    const newTodo: Todo = {\n      id: maxId + 1,\n      title: newTodoTitle.trim(),\n      userId: newUserId,\n      completed: false,\n      user: getUser(userId),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  }\n\n  function onSubmit(event: React.FormEvent) {\n    event.preventDefault();\n\n    setTitleError(!todoTitle);\n    setUserError(!userId);\n\n    if (!todoTitle || !userId) {\n      return;\n    }\n\n    addTodo(todoTitle, userId);\n    setTodoTitle('');\n    setUserId(0);\n  }\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTodoTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleUserName = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(onSubmit)}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={todoTitle}\n            onChange={handleTitle}\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            name=\"users\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserName}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}