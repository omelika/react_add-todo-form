{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","preparedTodos","userId","usersFromServer","find","App","useState","setTodo","todoTitle","setTodoTitle","userName","setUserName","isTitle","setIsTitle","isUserName","setIsUserName","action","method","onSubmit","event","preventDefault","newUser","newTodo","length","trim","currentTodos","type","onChange","target","value","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8be287f6.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <>\n    {user && (\n      <>\n        <p>\n          {'Name: '}\n          {user.name}\n        </p>\n        <span>{'Email: '}</span>\n        <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n          {user.email}\n        </a>\n      </>\n    )}\n  </>\n);\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article className={classNames(\n    'TodoInfo',\n    { 'TodoInfo--completed': todo.completed === true },\n  )}\n  >\n    <div className=\"TodoInfo__task\">TO DO TASK</div>\n\n    <UserInfo user={todo.user} />\n    <p className=\"TodoInfo__title\">\n      {`Task: ${todo.title}`}\n\n    </p>\n    <p>\n      {`Status: ${todo.completed ? 'Done' : 'In progress'}`}\n    </p>\n\n  </article>\n);\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import './App.scss';\n\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  // if there is no user with a given userId\n  return foundUser || null;\n}\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodo] = useState<Todo[]>(preparedTodos);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [userName, setUserName] = useState('');\n  const [isTitle, setIsTitle] = useState(true);\n  const [isUserName, setIsUserName] = useState(true);\n\n  function onSubmit(event: React.FormEvent) {\n    event.preventDefault();\n\n    // const defaultUser = { id: 1, name: 'default', email: 'default' };\n\n    if (!todoTitle) {\n      setIsTitle(false);\n    }\n\n    if (!userName) {\n      setIsUserName(false);\n    }\n\n    if (todoTitle && userName) {\n      const newUser = usersFromServer\n        .find(user => user.name === userName) || null;\n\n      const newTodo: Todo = {\n        id: todos.length + 1,\n        title: todoTitle.trim(),\n        completed: false,\n        user: newUser,\n      };\n\n      setTodo(currentTodos => [...currentTodos, newTodo]);\n      setTodoTitle('');\n      setUserName('');\n    }\n  }\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTodoTitle(event.target.value);\n    setIsTitle(true);\n  };\n\n  const handleUserName = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserName(event.target.value);\n    setIsUserName(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(onSubmit)}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            onChange={handleTitle}\n          />\n          {!isTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            name=\"users\"\n            data-cy=\"userSelect\"\n            value={userName}\n            onChange={handleUserName}\n          >\n            <option\n              value=\"Choose a user\"\n              disabled\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.name}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {!isUserName && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}